- @title= t('annotator.title')
.annotator-page-container{'data-controller': 'annotator'}
  .annotator-page-subcontainer
    .annotator-page-title
      .text
        = @page_name
      .line
    .annotator-page-decription
      = t('annotator.description')
    = form_tag(@form_url, method: :get, 'data-turbo': true, novalidate: true,'data-controller': 'form-url', 'data-action': 'submit->form-url#submit') do
      .annotator-page-inputs{'data-controller': 'reveal-component'}
        .inputs
          %div
            .annotator-page-text-area{'data-controller': 'sample-text'}
              %textarea{rows: "7" , placeholder: t('annotator.input_hint'), name: "text",  maxlength: "500", 'data-sample-text-target': "input", 'data-annotator-target': 'input'}
                = params[:text]
              = insert_sample_text_button(t('annotator.insert_sample_text'))
          .annotator-page-options
            .section-text
              = t('annotator.options')
            .prefrences
              .chips
                = check_input(name: 'expand_mappings', label: t('annotator.include_mappings'), checked: params[:expand_mappings])
                = check_input(name: 'exclude_numbers', label: t('annotator.exclude_numbers'), checked: params[:exclude_numbers])
                = check_input(name: 'exclude_synonyms', label: t('annotator.exclude_synonyms'), checked: params[:exclude_synonyms])

            - if federation_enabled?
              .filter-container
                .title
                  = t('federation.results_from_external_portals')
                .field.d-flex
                  = federation_input_chips(name: "portals[]")
            .select-ontologies
              = ontologies_selector(id:'annotator_page_ontologies', label: t('annotator.select_ontologies') ,name: 'ontologies[]', selected: params[:ontologies]&.split(','))
        .annotator-page-button
          = form_save_button(size: nil, id: 'annotator', value: t('annotator.get_annotation'))

    = empty_state(text: t('no_result_was_found')) if @results && @results.empty?
    = alert_message_if_federation_error(@federation_errors) { @federation_errors.join('<br/>').html_safe }

    - unless @results.nil? || @results.empty?
      .annotator-page-results
        .cont
          .title
            Annotations
          .details.d-flex.align-items-end.flex-column
            %div
              = "#{t('annotator.total_results')} #{@results.length} (direct: #{@direct_results} / parents: #{@parents_results})".html_safe
            %div
              = "#{request_portals_names(@federation_counts, @time)}".html_safe

        .annotator-table-container
          = render TableComponent.new(id: 'annotator-table', borderless: true, outline: true, sort_column: '0', paging: true, searching: true) do |t|
            - t.header do |h|
              - @results_table_header.each do |header|
                - h.th do
                  = header
            - @results.each do |result|
              - t.row do |r|
                - r.td(width: "40%") do
                  = annotator_class_label_fetcher(result[:class], result[:ontology])
                - r.td do
                  %div.d-flex.flex-column
                    - Array(result[:ontologies]).each do |ontology|
                      = link_to ontoportal_ui_link(ontology[:id]) do
                        %div.my-1
                          - if internal_ontology?(ontology[:id])
                            = ontology[:text]
                          - else
                            = annotator_external_ontology(ontology)
                - r.td do
                  - result[:context].each do |context|
                    - if !context[:child]
                      .annotation-context{'data-from': context[:from], 'data-to': context[:to], 'data-annotator-target': 'context'}
                    - else
                      .annotation-parent.align-items-center.d-flex
                        - cls = context[:child]
                        .text
                          Parent of:
                        %span
                          = get_link_for_cls_ajax(cls[:id], cls[:ont_acronym], '_blank')
                        .gray
                          |
                        .text
                          Level:
                        .level
                          = context[:level]
                - if params[:fast_context]
                  - r.td do
                    = result[:negation]
                  - r.td do
                    = result[:experiencer]
                  - r.td do
                    = result[:temporality]
                  - r.td do
                    = result[:certainty]
                - if params[:score] && !params[:score].eql?('none')
                  - r.td do
                    = result[:score] 
        .annotator-bottom-actions
          .json-button
            = annotator_json_button
          .rdf-button
            = annotator_rdf_button
          .cite-us-button
            = annotator_cite_us_button
          .annotator-doc
            = annotator_doc_button